name: CD

on:
  push:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}/src
      AWS_REGION: ${{ secrets.AWS_REGION }}
      STACK_NAME: ${{ secrets.STACK_NAME }}
      ARTIFACTS_BUCKET: ${{ secrets.ARTIFACTS_BUCKET }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build deps
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt

      - name: Build vectors (NumPy) & upload to S3
        run: |
          mkdir -p store
          python -m rag.ingest.build_vectors_numpy \
            --collection data/collections/fam \
            --bucket "${ARTIFACTS_BUCKET}" \
            --prefix rag/index \
            --meta_local store/meta.jsonl \
            --vectors_out store/vectors.npy

      - name: SAM build
        run: |
          sam build --use-container -t infra/sam/template.yaml

      - name: SAM deploy
        env:
          SLACK_SIGNING_SECRET_ARN: ${{ secrets.SLACK_SIGNING_SECRET_ARN }}
          SLACK_BOT_TOKEN_ARN: ${{ secrets.SLACK_BOT_TOKEN_ARN }}
        run: |
          sam deploy \
            --stack-name "${STACK_NAME}" \
            --region "${AWS_REGION}" \
            --capabilities CAPABILITY_IAM \
            --resolve-s3 \
            --no-fail-on-empty-changeset \
            --parameter-overrides \
              ArtifactsBucket="${ARTIFACTS_BUCKET}" \
              RagApiUrl="https://example.invalid/override-at-runtime" \
              SlackBotTokenArn="${SLACK_BOT_TOKEN_ARN}" \
              SlackSigningSecretArn="${SLACK_SIGNING_SECRET_ARN}"

      - name: Post-deploy smoke
        run: |
          bash scripts/post_deploy_smoke.sh "${STACK_NAME}" "${AWS_REGION}"
